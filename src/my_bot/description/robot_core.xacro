<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:include filename="inertial_macros.xacro" />
  <xacro:include filename="colours.xacro" />

  <!-- "TODO:" Still need to look at the inertia macros to make sure they are defined properly. -njreichert -->

  <!-- ====================== Constants ======================== -->
  <!-- Using REP 103 here. -njreichert -->

  <xacro:property name="chassis_length" value="0.75" />
  <xacro:property name="chassis_width" value="0.3" />
  <xacro:property name="chassis_height" value="0.15" />

  <xacro:property name="wheel_chassis_buffer_len" value="0.005" />
  <xacro:property name="wheel_x_spacing" value="0.2" />
  <xacro:property name="wheel_y_spacing" value="${(chassis_width / 2) + (wheel_length / 2) + wheel_chassis_buffer_len}"/>
  <xacro:property name="wheel_radius" value="0.075" />
  <xacro:property name="wheel_length" value="0.04" />

  <xacro:property name="wheel_friction" value="0.8" />

  <!-- Base Link -->
  <link name="base_link">

  </link>


  <!-- Chassis -->
  <joint name="chassis_joint" type="fixed">
    <parent link="base_link" />
    <child link="chassis" />

    <!-- separation distance between base_link (middle of chassis) and chassis origin -->
    <origin xyz="-${chassis_length / 2} 0 0" />
  </joint>

  <link name="chassis">
    <visual>
      <!-- shift box forward so chassis link origin is centered at back bottom -->
      <origin xyz="${chassis_length / 2} 0 ${chassis_height / 2}" />
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}" />
      </geometry>
      <material name="white" />
    </visual>
    <collision>
        <origin xyz="${chassis_length / 2} 0 ${chassis_height / 2}" />
        <geometry>
          <box size="${chassis_length} ${chassis_width} ${chassis_height}" />
        </geometry>
    </collision>
    <xacro:inertial_box mass="0.5" x="${chassis_length / 2}" y="0" z="${chassis_height / 2}">
      <origin xyz="${chassis_length / 2} 0 ${chassis_height / 2}" rpy="0 0 0" />
    </xacro:inertial_box>
  </link>

  <gazebo reference="chassis">
    <material>Gazebo/White</material>
  </gazebo>


  <!-- Back Left Wheel -->
  <joint name="left_back_wheel_joint" type="continuous">
    <parent link="base_link" />
    <child link="left_back_wheel" />

    <!-- transform from parent link to child link -->
    <!-- joint is located at origin of child link -->
    <origin xyz="-${wheel_x_spacing} ${wheel_y_spacing} 0" rpy="-${pi/2} 0 0" />

    <!-- axis of rotation; takes normalized vector of direction to rotate around -->
    <axis xyz="0 0 1" />
  </joint>

  <link name="left_back_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_length}" />
      </geometry>
      <material name="blue" />
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_length}" />
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>${wheel_friction}</mu>
            <mu2>${wheel_friction}</mu2>
            <slip1>0.0</slip1>
            <slip2>0.0</slip2>
          </ode>
        </friction>
      </surface>
    </collision>
    <xacro:inertial_cylinder mass="0.1" length="${wheel_length}" radius="${wheel_radius}">
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:inertial_cylinder>
  </link>

  <gazebo reference="left_back_wheel">
    <material>Gazebo/Blue</material>
    <mu1>${wheel_friction}</mu1>
    <mu2>${wheel_friction}</mu2>
  </gazebo>


  <!-- Front Left Wheel -->
  <joint name="left_front_wheel_joint" type="continuous">
    <parent link="base_link" />
    <child link="left_front_wheel" />

    <!-- transform from parent link to child link -->
    <!-- joint is located at origin of child link -->
    <origin xyz="${wheel_x_spacing} ${wheel_y_spacing} 0" rpy="-${pi/2} 0 0" />

    <!-- axis of rotation; takes normalized vector of direction to rotate around -->
    <axis xyz="0 0 1" />
  </joint>

  <link name="left_front_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_length}" />
      </geometry>
      <material name="blue" />
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_length}" />
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>${wheel_friction}</mu>
            <mu2>${wheel_friction}</mu2>
            <slip1>0.0</slip1>
            <slip2>0.0</slip2>
          </ode>
        </friction>
      </surface>
    </collision>
    <xacro:inertial_cylinder mass="0.1" length="${wheel_length}" radius="${wheel_radius}">
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:inertial_cylinder>
  </link>

  <gazebo reference="left_front_wheel">
    <material>Gazebo/Blue</material>
    <mu1>${wheel_friction}</mu1>
    <mu2>${wheel_friction}</mu2>
  </gazebo>


  <!-- Back Right Wheel -->
  <joint name="right_back_wheel_joint" type="continuous">
    <parent link="base_link" />
    <child link="right_back_wheel" />
    <origin xyz="-${wheel_x_spacing} -${wheel_y_spacing} 0" rpy="${pi/2} 0 0" />
    <axis xyz="0 0 -1" />
  </joint>
  
  <link name="right_back_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_length}" />
      </geometry>
      <material name="blue" />
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_length}" />
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>${wheel_friction}</mu>
            <mu2>${wheel_friction}</mu2>
            <slip1>0.0</slip1>
            <slip2>0.0</slip2>
          </ode>
        </friction>
      </surface>
    </collision>
    <xacro:inertial_cylinder mass="0.1" length="${wheel_length}" radius="${wheel_radius}">
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:inertial_cylinder>
  </link>

  <gazebo reference="right_back_wheel">
    <material>Gazebo/Blue</material>
    <mu1>${wheel_friction}</mu1>
    <mu2>${wheel_friction}</mu2>
  </gazebo>


  <!-- Front Right Wheel -->
  <joint name="right_front_wheel_joint" type="continuous">
    <parent link="base_link" />
    <child link="right_front_wheel" />

    <!-- transform from parent link to child link -->
    <!-- joint is located at origin of child link -->
    <origin xyz="${wheel_x_spacing} -${wheel_y_spacing} 0" rpy="${pi/2} 0 0" />

    <!-- axis of rotation; takes normalized vector of direction to rotate around -->
    <axis xyz="0 0 -1" />
  </joint>

  <link name="right_front_wheel">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_length}" />
      </geometry>
      <material name="blue" />
    </visual>
    <collision>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_length}" />
      </geometry>
      <surface>
        <friction>
          <ode>
            <mu>${wheel_friction}</mu>
            <mu2>${wheel_friction}</mu2>
            <slip1>0.0</slip1>
            <slip2>0.0</slip2>
          </ode>
        </friction>
      </surface>
    </collision>
    <xacro:inertial_cylinder mass="0.1" length="${wheel_length}" radius="${wheel_radius}">
      <origin xyz="0 0 0" rpy="0 0 0" />
    </xacro:inertial_cylinder>
  </link>

  <gazebo reference="right_front_wheel">
    <material>Gazebo/Blue</material>
    <mu1>${wheel_friction}</mu1>
    <mu2>${wheel_friction}</mu2>
  </gazebo>
</robot>